services:
  postgres:
    image: postgres:15
    container_name: evolution_postgres
    restart: always
    environment:
      POSTGRES_DB: evolutiondb
      POSTGRES_USER: evouser
      POSTGRES_PASSWORD: evopass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U evouser -d evolutiondb"]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: evolution_redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  evolution-api:
    image: atendai/evolution-api:latest
    container_name: evolution_api
    restart: always
    ports:
      - "8080:8080"
    environment:
      SERVER_PORT: 8080
      DATABASE_PROVIDER: ${DATABASE_PROVIDER}
      DATABASE_CONNECTION_URI: ${DATABASE_CONNECTION_URI}
      DATABASE_CONNECTION_CLIENT_NAME: ${DATABASE_CONNECTION_CLIENT_NAME}
      CACHE_REDIS_ENABLED: ${CACHE_REDIS_ENABLED}
      CACHE_REDIS_URI: ${CACHE_REDIS_URI}
      CACHE_REDIS_PREFIX_KEY: ${CACHE_REDIS_PREFIX_KEY}
      AUTHENTICATION_API_KEY: ${AUTHENTICATION_API_KEY}
    volumes:
      - evolution_data:/evolution/instances
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

volumes:
  postgres_data:
  evolution_data:
  redis_data: